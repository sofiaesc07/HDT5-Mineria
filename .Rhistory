datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
training1 <- na.omit(training1)
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modeloNB<-naiveBayes(SalesPrice~., data=training)
modeloNB
modeloNB<-naiveBayes(SalesPrice~., data=training1)
modeloNB<-naiveBayes(training1$SalesPrice~., data=training1)
modelo1<-naiveBayes(SalesPrice~., data=training1)
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
training1 <- na.omit(training1)
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modelo1<-naiveBayes(SalesPrice~., data=training1)
View(training1)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modelo1<-naiveBayes(SalesPrice~., data=training1)
modelo1<-naiveBayes(SalesPrice~., data=training)
modelo1
modelo1<-naiveBayes(training$SalesPrice~., data=training)
modelo1
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
test<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training1<-datosc[corte,]
test1<-datosc[-corte,]
modelo1<-naiveBayes(training$SalesPrice~., data=training)
modelo1<-naiveBayes(training1$SalesPrice~., data=training1)
modelo1
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training$clasification <- ifelse(training$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1}<-datos[corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modelo1<-naiveBayes(training$SalesPrice~., data=training)
modelo1
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
prediction2 <- predict(modelo2, training1)
cm<-confusionMatrix(prediction2,as.factor(training1$clasification))
cm
ct<-trainControl(method = "cv",training1,number=10, verboseIter=T)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=train,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
training1<-na.oimt(training1)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
training1<-na.omit(training1)
test1<-datos[-corte,]
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
training1<-na.omit(training1)
test1<-datos[-corte,]
test1<- na.omit(test1)
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modelo1<-naiveBayes(training$SalesPrice~., data=training)
modelo1
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
prediction2 <- predict(modelo2, training1)
cm<-confusionMatrix(prediction2,as.factor(training1$clasification))
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
modelo1<-naiveBayes(training$SalesPrice~., data=training)
modelo1
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
prediction2 <- predict(modelo2, training1)
cm<-confusionMatrix(prediction2,as.factor(training1$clasification))
cm
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
training1<-na.omit(training1)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(training1$clasification~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(as.factor(training1$clasification)~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(as.factor(training1$SalePrice)~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(training1$SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-training1(training1$SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-training1(SalePrice~.,data=training1,method="nb",trControl = ct)
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
porcentaje<-0.7
set.seed(123)
datos <- na.omit(datos)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
datos <- na.omit(datos)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
prediction2 <- predict(modelo2, training1)
cm<-confusionMatrix(prediction2,as.factor(training1$clasification))
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo2<-naiveBayes(training1$clasification~., data=training1)
modelo2
prediction2 <- predict(modelo2, training1)
cm<-confusionMatrix(prediction2,as.factor(training1$clasification))
cm
ct<-trainControl(method = "cv",number=10, verboseIter=T)
modeloCaret<-train(SalePrice~.,data=training1,method="nb",trControl = ct)
prediction2 <- predict(modelo2, test1)
cm<-confusionMatrix(prediction2,as.factor(test1$clasification))
#Volver las variables numericas para la predicción
test1$GrLivArea<-as.numeric(test1$GrLivArea)
test1$YearBuilt<-as.numeric(test1$YearBuilt)
test1$BsmtUnfSF<-as.numeric(test1$BsmtUnfSF)
test1$TotalBsmtSF<-as.numeric(test1$TotalBsmtSF)
test1$GarageArea<-as.numeric(test1$GarageArea)
test1$YearRemodAdd<-as.numeric(test1$YearRemodAdd)
test1$SalePrice<-as.numeric(test1$SalePrice)
test1$LotArea<-as.numeric(test1$LotArea)
predBayes<-predict(modelo1, newdata = test1[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice","LotArea")])
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
library(e1071)
library(caret)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'),as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datosc[corte,]
test<-datosc[-corte,]
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
training1$clasification <- factor(training1$clasification)
table(training1$clasification)
modelo1<-naiveBayes(training1$clasification~., data=training1)
modelo1
#Volver las variables numericas para la predicción
test1$GrLivArea<-as.numeric(test1$GrLivArea)
test1$YearBuilt<-as.numeric(test1$YearBuilt)
test1$BsmtUnfSF<-as.numeric(test1$BsmtUnfSF)
test1$TotalBsmtSF<-as.numeric(test1$TotalBsmtSF)
test1$GarageArea<-as.numeric(test1$GarageArea)
test1$YearRemodAdd<-as.numeric(test1$YearRemodAdd)
test1$SalePrice<-as.numeric(test1$SalePrice)
test1$LotArea<-as.numeric(test1$LotArea)
predBayes<-predict(modelo1, newdata = test1[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice","LotArea")])
prediction1 <- predict(modelo1, test1)
cm<-confusionMatrix(prediction1,as.factor(test1$clasification))
#Volver las variables numericas para la predicción
test1$GrLivArea<-as.numeric(test1$GrLivArea)
test1$YearBuilt<-as.numeric(test1$YearBuilt)
test1$BsmtUnfSF<-as.numeric(test1$BsmtUnfSF)
test1$TotalBsmtSF<-as.numeric(test1$TotalBsmtSF)
test1$GarageArea<-as.numeric(test1$GarageArea)
test1$YearRemodAdd<-as.numeric(test1$YearRemodAdd)
test1$SalePrice<-as.numeric(test1$SalePrice)
test1$LotArea<-as.numeric(test1$LotArea)
predBayes<-predict(modelo1, newdata = test1[,c("GrLivArea","YearBuilt","BsmtUnfSF","TotalBsmtSF","GarageArea","YearRemodAdd", "SalePrice","LotArea")])
prediction1 <- predict(modelo1, test1)
prediction1<-as.factor(prediction1)
cm<-confusionMatrix(prediction1,as.factor(test1$clasification))
library(dplyr)
library(rpart)
library(rpart.plot)
library(caret)
library(tree)
library(randomForest)
library(ggplot2)
library(tidyr)
datos <- read.csv("train.csv")
datos <- datos %>% mutate_at(c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour', 'Utilities'
, 'LotConfig', 'LandSlope', 'Condition2', 'RoofMatl', 'Exterior2nd', 'Electrical'), as.factor)
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training1<-datos[corte,]
test1<-datos[-corte,]
datos2 <- dplyr::select_if(datos, is.numeric)
datos2 <- na.omit(datos2)
datosc <- scale(datos2)
cor(datosc)
corte <- sample(nrow(datos),nrow(datos)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
porcentaje<-0.7
set.seed(123)
corte <- sample(nrow(datosc),nrow(datosc)*porcentaje)
training<-datos[corte,]
test<-datos[-corte,]
head(training)
head(test)
arbol1 <- rpart(SalePrice ~ ., data=training)
rpart.plot(arbol1)
pred1 <- predict(arbol1, data = training1)
p1 <- sum((mean(training1$SalePrice)-training1$SalePrice) ^ 2)
p2 <- sum((training1$SalePrice-pred1) ^ 2)
p3 <- 1-(p2 / p1)
p3
modelo1 <- rpart(SalePrice ~ ., data=training, maxdepth=2)
modelo2 <- rpart(SalePrice ~ ., data=training, maxdepth=3)
modelo3 <- rpart(SalePrice ~ ., data=training, maxdepth=4)
rpart.plot(modelo1)
rpart.plot(modelo2)
rpart.plot(modelo3)
training1$clasification <- ifelse(training1$SalePrice > 214000, "Caras", ifelse(training1$SalePrice>163000, "Intemedia", "Economicas"))
table(training1$clasification)
training1<-training1[,-81]
modclasificacion<-rpart(clasification~.,data = training1,method = "class")
rpart.plot(modclasificacion)
y <- ifelse(test1$SalePrice > 214000, "Caras", ifelse(test1$SalePrice>163000, "Intemedia", "Economicas"))
test1 <- test1[,-81]
y <- as.factor(y)
pred2<-predict(modclasificacion, newdata = test1[,-81])
pred2 <- apply(pred2, 1, function(x) colnames(pred2)[which.max(x)])
pred2 <- factor(pred2)
table(y)
table(pred2)
plot(pred2, col="green",density=20,angle=135+geom_text(aes(label = signif(pred2)), nudge_y = 0))
plot(y , col="blue",density=20,angle=135)
confusionMatrix(y, pred2)
set.seed(123)
datos2$SalePrice <- as.factor(datos2$SalePrice)
ent <- trainControl(method = "repeatedcv", number = 10, repeats = 2)
tune_grid = expand.grid(cp=c(0.001))
vtree <- train(SalePrice ~ ., data = datos2, method = "rpart", trControl = ent, tuneGrid = tune_grid, maxdepth = 5, minbucket = 5)
vtree
#Profundidad 4
vtree1 <- train(SalePrice ~ ., data = datos2, method = "rpart", trControl = ent, tuneGrid = tune_grid, maxdepth = 4, minbucket = 4)
vtree1
#Profundidad 5
vtree2 <- train(SalePrice ~ ., data = datos2, method = "rpart", trControl = ent, tuneGrid = tune_grid, maxdepth = 5, minbucket = 5)
vtree2
#Profundidad 6
vtree3 <- train(SalePrice ~ ., data = datos2, method = "rpart", trControl = ent, tuneGrid = tune_grid, maxdepth = 6, minbucket = 6)
vtree3
clasificadorRF <- randomForest(SalePrice ~ ., data = datos2, ntree = 250)
y_pred <- predict(clasificadorRF, newdata = test)
y_pred
